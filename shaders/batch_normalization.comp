#version 440

layout(local_size_x_id = 0) in;             // workgroup size set with specialization constant
layout(push_constant) uniform Parameters {  // push constants
	int numInputs, filters;
} p;

layout(std430, binding = 0) buffer lay0 { float inputs[]; }; // array parameters
layout(std430, binding = 1) buffer lay1 { float params[]; }; // array parameters

void main(){
   const uint globalId = gl_GlobalInvocationID.x; 
   
   if(globalId >= p.numInputs){
      return;
   }
   const float eps = 0.001;
   uint channel = globalId % p.filters;
   float beta = params[channel];
   float gamma = params[p.filters + channel];
   float mean = params[2 * p.filters + channel];
   float variance = params[3 * p.filters + channel];
   inputs[globalId] = (inputs[globalId] - mean) / sqrt(variance + eps);
   inputs[globalId] = inputs[globalId] * gamma + beta;
}
